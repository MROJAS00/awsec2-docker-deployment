---
- name: Install docker
  hosts: all
  become: yes
  tasks:
    - name: Ensure docker and libxcrypt-compat are installed
      yum: 
        name:
          - docker  # Install Docker
          - libxcrypt-compat  # Install libxcrypt-compat to avoid issues with certain image versions
          - python3-pip  # Install pip for Python3 (likely needed for managing Python dependencies)
        update_cache: yes  # Update the yum package cache before installing
        state: present  # Ensure the packages are installed

- name: Install docker compose V2 
  hosts: all
  become: yes
  tasks:
    - name: Create directory for Docker CLI plugins
      file:
        path: /usr/local/lib/docker/cli-plugins  # Directory for Docker CLI plugins
        state: directory  # Create the directory if it doesn't exist
        mode: '0755'  # Set permissions so Docker can access it
    - name: Download Docker Compose V2 binary
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-linux-x86_64  # URL of the Docker Compose binary
        dest: /usr/local/lib/docker/cli-plugins/docker-compose  # Destination for the Docker Compose binary
        mode: '0755'  # Make the downloaded binary executable
    - name: Make Docker Compose binary executable
      file:
        path: /usr/local/lib/docker/cli-plugins/docker-compose  # Path of the downloaded Docker Compose binary
        mode: '0755'  # Ensure the binary is executable
    - name: Verify Docker Compose installation
      command: docker compose version  # Run `docker compose version` to check if Docker Compose was installed successfully
      register: docker_compose_version  # Register the result of the command
      ignore_errors: yes  # Ignore errors if the command fails
    - name: Show Docker Compose version
      debug:
        msg: "{{ docker_compose_version.stdout }}"  # Print out the version of Docker Compose if the command was successful
      when: docker_compose_version.rc == 0  # Only show the version if the command was successful

- name: Start docker 
  hosts: all
  become: yes
  tasks:
    - name: Ensure docker is running 
      systemd:
        name: docker  # Ensure the Docker service is started
        state: started  # Start the Docker service if it isn't running

- name: Add all-user to docker group 
  hosts: all
  become: yes
  tasks:
    - name: Add all-user to docker group 
      user: 
        name: ec2-user  # Add the ec2-user to the Docker group
        groups: docker  # Add to the 'docker' group
        append: yes  # Ensure that the user is added without removing them from other groups
    - name: Reconnect to server session 
      meta: reset_connection  # Re-establish the connection to the server after modifying the user's group membership

- name: Start docker containers from docker-compose file
  hosts: all
  vars_files:
    - project-vars  # Load variables from the 'project-vars' file
  tasks:
    - name: Copy Docker compose
      copy: 
        src: ./docker-compose.yaml  # Copy the docker-compose.yaml file from the local machine to the remote server
        dest: /home/ec2-user  # Destination path on the remote server
    - name: Install docker python module
      pip:
        name: 
          - docker  # Install the Docker Python module
          - docker-compose  # Install the Docker Compose Python module (for programmatic control)
    - name: Start containers from compose 
      community.docker.docker_compose_v2:
        project_src: /home/ec2-user  # Path to the directory containing the docker-compose.yaml file
