- name: Install Docker and dependencies
  hosts: all
  become: yes
  tasks:
    - name: Ensure Docker, libxcrypt-compat, and Python3-pip are installed
      yum: 
        name:
          - docker  # Install Docker
          - libxcrypt-compat  # Install libxcrypt-compat for compatibility with certain Docker images
          - python3-pip  # Install pip for Python3 (needed for managing Python dependencies)
        update_cache: yes  # Ensure yum cache is updated before installing packages
        state: present  # Ensure all specified packages are installed

- name: Install Docker Compose V2
  hosts: all
  become: yes
  tasks:
    - name: Create directory for Docker CLI plugins
      file:
        path: /usr/local/lib/docker/cli-plugins  # Ensure directory for Docker plugins exists
        state: directory  # Create the directory if not present
        mode: '0755'  # Set permissions for the directory

    - name: Download Docker Compose V2 binary
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-linux-x86_64  # URL of the Docker Compose binary
        dest: /usr/local/lib/docker/cli-plugins/docker-compose  # Destination to store the binary
        mode: '0755'  # Set permissions to make it executable

    - name: Verify Docker Compose installation
      command: docker compose version  # Verify that Docker Compose was installed successfully
      register: docker_compose_version  # Capture the output of the command
      failed_when: docker_compose_version.rc != 0  # Fail the playbook if the command does not succeed

    - name: Show Docker Compose version
      debug:
        msg: "Docker Compose version: {{ docker_compose_version.stdout }}"  # Output the installed version of Docker Compose

- name: Ensure Docker is running
  hosts: all
  become: yes
  tasks:
    - name: Start Docker service
      systemd:
        name: docker  # Docker service name
        state: started  # Ensure Docker is started and running

- name: Manage Docker group for ec2-user
  hosts: all
  become: yes
  tasks:
    - name: Add ec2-user to Docker group
      user: 
        name: ec2-user  # Add user to Docker group
        groups: docker  # Add to the 'docker' group
        append: yes  # Ensure the user is added to the Docker group without removing other groups

    - name: Reconnect to server session after group change
      meta: reset_connection  # Re-establish SSH session to apply new group memberships

- name: Deploy Docker containers using Docker Compose
  hosts: all
  vars_files:
    - project-vars  # Load project-specific variables (e.g., path to docker-compose.yaml)
  tasks:
    - name: Copy Docker Compose file to server
      copy: 
        src: ./docker-compose.yaml  # Path to the local docker-compose.yaml file
        dest: /home/ec2-user/docker-compose.yaml  # Destination on the remote server
        
    - name: Copy html folder to server
      copy:
        src: ./html/  # Local path to the html folder
        dest: /home/ec2-user/html/  # Destination folder on the EC2 instance
        mode: '0755'  # Set permissions for the folder and its contents

    - name: Install Docker Python modules
      ansible.builtin.pip:  # Use the built-in pip module to install Python dependencies
        name:
          - docker  # Docker Python module
          - docker-compose  # Docker Compose Python module for programmatic control

    - name: Start Docker containers from compose file
      community.docker.docker_compose_v2:  # Use the Docker Compose module to start containers
        project_src: /home/ec2-user  # Path to the directory containing the docker-compose.yaml file
